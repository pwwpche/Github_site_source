---
layout: post
title:  "Catagorized bug lists"
date:   2015-7-29
tags:
- Lab
- Bug_list
---

####String interpolation error()
#####Bug - missing prefex in string interpolation
https://github.com/lift/framework/commit/dc632a927a22a9b81ff5422fdc1ba389ce47595f
#####Bug - broken string interpolation(missing prefix)
https://github.com/lift/framework/commit/51b4f9dbf672d12a3aa5227e4fbecdadf6493bf5
Regex : 
[\W]"[^"]*\${[^"]*}[^"]*"


####Obvious error
#####Bug - self calling(an obvious error, with function self-calling without any change to parameters)
https://github.com/sksamuel/elastic4s/commit/ae73cd393cb967278aa92e53f6c480af0a7e2fac
https://github.com/nicta/scoobi/commit/20c875e1a1fb2710e7efd8a1dd211e8b3cda1341
https://github.com/storm-enroute/reactive-collections/commit/0761e212e486e624dd2f3a69bdcbcb541deb64a9
#####Bug - function name conflict(addHeader() and setHeader())
https://github.com/skinny-framework/skinny-framework/commit/5c9362edb0905f20c06e94b9bde00ec94b21b042
#####[Bug]ambiguous name
https://github.com/milessabin/shapeless/commit/ddd46e7a6ce856904b5c52b55278f487f47eb634



#####Bug - some obvious function misuse
https://github.com/sksamuel/elastic4s/commit/3748069f982accf1ba94c4defd4aac16ba39fd1e
#####[Not Found] - "0000" means that something is missing
https://github.com/factorie/factorie/commit/10041d13117a88c364ae48caddb563477af850b1
#####[Not Found] - has/is should be something==null
https://github.com/storm-enroute/reactive-collections/commit/4032970311a636d78b4daa742e7d3f98fa7acaf4
- The following need to analyze source code, not compiled .class)
#####Bug - wrong intended null evaluation
https://github.com/lift/framework/commit/7cc7134c37a599dd7f80a646eb0ce49d1d318862
Regex : if.*((.*(!=|ne)\s*null)|null\s*(!=|ne).*).*Nil


#####Bug - damn typo...(class name is "not in", but toString() return "in")
https://github.com/fwbrasil/activate/commit/36dcc53026e665751a4de0ee3d1c760e3b1b200f
check : Duplicate toString values in case class with only one string involved, and class names are different
Regex : def toString\s*=\s*"[^"]*"
#####Bug - use before init(should be -> if(initialize) then do some work)
https://github.com/fwbrasil/activate/commit/02f7ec4a005642b01b348bdaee11cf39a922cbc4
#####Bug - check for unclosed bracket(If use IDE, obviously these errors can be eliminated)
https://github.com/skinny-framework/skinny-framework/commit/2134a1c5ccae5a83d9d2efd8eb33b34849fdcfd2
[Bug]same var used twice between statement
https://github.com/twitter/algebird/commit/3dab7aa8ac8e093dfb367476c5672e844ff6a818
[Bug]increment inside condition, which leed to infinite loop(i++ in if statement)
https://github.com/storm-enroute/reactive-collections/commit/a06257201def332e59f5966f37d21f47ef290f00
[Bug]False condition(could be detected by NullChecker in findBugs)
https://github.com/storm-enroute/reactive-collections/commit/5d6581c23641141cfacb9491c5e8f1426383c39f


####Concurrency and Lock
#####Bug - concurrent lock error(index in unload() is not protected by lock)
https://github.com/fwbrasil/activate/commit/2aa63ec3dc64db66decbcd274b8443422da1b4c5
#####Bug - read/write lock(Move lazy inside lock scope, but why?)
https://github.com/fwbrasil/activate/commit/70fbe4070a56ec336fad71a0579c0f9f78c92831
#####Bug - concurrent delete(not all map.put are protected, so duplicated get() will lead to different result)
https://github.com/fwbrasil/activate/commit/afc003b2c7d669008dacd20686dae5dbb86875a8
#####Bug - deadlock(one holds asyncSync while another holds msgCallbackSync)
https://github.com/lift/framework/commit/820a15d7a2c5e2bb4eb00352b325412393329998
#####Bug - reentrantreadwritelock deadlock(one holds readlock and another holds writelock, but why writelock could be held twice?)
https://github.com/lift/framework/commit/9dc635255f15bca027db5735e94ddfbbd800aa56



####NPE
#####Bug - possible Null Pointer exception
https://github.com/fwbrasil/activate/commit/43ff0a11562ff1628cbbd618994ca22cdeeb0276
#####Bug - get empty element from map
https://github.com/fwbrasil/activate/commit/11d7c89632855104cc91be0b05cc40b0deed38b9
#####Bug - undefined field(in Reflection.getStatic())
https://github.com/fwbrasil/activate/commit/11d7c89632855104cc91be0b05cc40b0deed38b9
#####Bug - not-safe use of toString
https://github.com/skinny-framework/skinny-framework/commit/35c06c50515988cf49a6092a83fc640fd852f2d9
#####Bug - should check Null ahead
https://github.com/skinny-framework/skinny-framework/commit/56495db870122bda1c77f32e4f0b52b97677d80a
#####Bug - Check null
https://github.com/playframework/playframework/commit/f5971e788a4af7037e1df86b3151a7229df60018
https://github.com/playframework/playframework/commit/2bcf2c1a7a86f4d1b1db8306a1656f0db1a75d75
https://github.com/storm-enroute/reactive-collections/commit/6e66926bf2380a94d4c6be5b9e495b754ca311a6
https://github.com/aselab/scala-activerecord/commit/10d9069bf62f8217e04bdba3d20ed3f590fdce22	
#####Bug - Another NPE(hard to detect)
https://github.com/skinny-framework/skinny-framework/commit/2e2a5b439a6a2a5fa1098ac33fe0fa701d782b77
https://github.com/lift/framework/commit/0836f2a926c33bf72d8babe36d958653b146bbc1
https://github.com/lift/framework/commit/ce4bf6f1a5d1c8c71001e24ca537c5800ac7c541
https://github.com/lift/framework/commit/a09b633327405cf3c4aad2c0c124ea5b897428b5
#####Bug - null check of string
https://github.com/lift/framework/commit/e6d70f393e32493bfc413ddad79711340903992a
https://github.com/lift/framework/commit/5312678ef896a5a5de1063b4b54b391df77d1738
https://github.com/lift/framework/commit/edebbd744804ce7f4e3e15d2512e53d304ee5b78
https://github.com/lift/framework/commit/1e24fe928cdfd482445b8fa5223cad3dc956acf2
#####Bug - null serialization
https://github.com/lift/framework/commit/97b92da891458b447946bdc2b8678a26f831fc19
https://github.com/aselab/scala-activerecord/commit/e43f4ac6a1303cbf4905a914982da1b8f9e9ab56
#####[Bug] should check exist first
https://github.com/unfiltered/unfiltered/commit/2d3706f7e03ac923be7fc55d87ad0b2f06cfdf77


####Pattern Matching
#####Bug - case fallthrough(In scala, case will not fall through, so any empty => block will be suspicious)
Regex : (high false-positive)
\s*case.*=>\s*
\s*(case|})
https://github.com/fwbrasil/activate/commit/3bac399611f04ee2792d03ec71b102f937452637
#####Bug - bad matching syntax, should be _(Invalid matching syntax)(Compile error)
https://github.com/mauricio/postgresql-async/commit/6e81e4adcb016cbd7b1e3ed36d5535d9cb6fa762
#####Bug - nonsense behavior of match(what does "()" do)
https://github.com/lift/framework/commit/aab84d819cc6f2abe040f6a84dd6949bb156256a


####Pointer OutOfBound
#####[Bug]mat.length is < n, so mat(n-1) is out of bound
https://github.com/BIDData/BIDMach/commit/21942503ceca49eb6b862c7e1b74b51455d1523c

####Pattern matching is not complete
#####Bug - missing default match option(this matching cannot generate "True" result for boolean matching)
https://github.com/lift/framework/commit/77ba2b73e800358405f9bbbe1e2ac3f26126d951
#####Bug - missing default match
https://github.com/lift/framework/commit/9b370d1bf627a38ebc0bdd7b8aa0152653f49807
https://github.com/lift/framework/commit/97c08c7dd9ed161a83f6c3b716e03bbec98f28fc
#####Bug - dead match condition(This one needs further check)
https://github.com/lift/framework/commit/deb27666c0f8936aa12763afd74aba1439305f40


####All except this
#####Bug - if everyone use, everyone should use (file is used in matching case but not in processing block)
https://github.com/scalatra/scalatra/commit/5bc791191f78c6fecd3e6d5f68474c7c84593869
#####Bug - missing .value(all except one pattern)
https://github.com/eed3si9n/scalaxb/commit/c90cb88c760d67b804df2a2418b4e5a60661656c



####Function return type(Need to study how type is generated)
#####Missing return type is not a bug
#####Bug - error with return type
https://github.com/skinny-framework/skinny-framework/commit/ed865e0cc193df6cdb8b478b7cb5c5a4d901612e
#####Bug - type mismatch
https://github.com/lift/framework/commit/1ffac230fea785e221e9ecb2a1b106c324700a2b
[Bug] "return" in case and bad return type
https://github.com/factorie/factorie/commit/1914891580b1e4cf7467b25fce2467f646d2193a
[Bug]Return type error
https://github.com/xitrum-framework/sclasner/commit/3ec95406d77b56f31a111192aeed76cd74059823



####Type checking
#####Bug - check for type[Nothing]
https://github.com/adamw/macwire/commit/366611f2364678efd625a446a93341deb62b825c
#####Bug - argument type error(need further insight)(Cross check with function call)
https://github.com/lift/framework/commit/f01b9d5fc50533f3c2ba932357fac8c39a1fd1ea
#####Bug - incorrect type check
https://github.com/lift/framework/commit/ea5f68c2208ea3d7907e7a089b0883d89e54a876
#####Bug - type mismatch in pattern matching
https://github.com/lift/framework/commit/1c7c0c3c23e77c6c2adfb3eb36080cbed57530a8
#####Bug - missing parenthesis of omComplete in fromCallback1, with type: Unit => ()(http://stackoverflow.com/questions/6643030/what-is-the-rule-for-parenthesis-in-scala-method-invocation)
https://github.com/playframework/playframework/commit/6ec8f31fc9c632ab3d1eab29f441e5e8e3db4271



####Enumeration
#####Bug - enum with duplicated value(value(10) was used twice)
https://github.com/lift/framework/commit/5f09c86fdc72ae163d2fc4d4415b764e3d92be1f

####Syntax error or unsafe usage
#####[False] - incorrect usage of array buffer(obvious)
https://github.com/lift/framework/commit/0b80e60948498400639949422d6040744cc45c76
#####[Possible] - unsafe use of setObject() in optionToStatement
https://github.com/playframework/playframework/commit/08c3ee4d0430653caa4c167e9d5a0d3dc6cb529c
#####[Bug]Possible string out of bound error
https://github.com/jrudolph/sbt-dependency-graph/commit/0bcd2e03f49f6c7133e9ef9e40b95d40970e4a29
#####[Bug]reuse an iterator
https://github.com/twitter/algebird/commit/f8cbd5d52eabfcbbc99fa3ccb2af9cb1a5485959
#####[Bug] misuse of Array(missing new)
https://github.com/BIDData/BIDMach/commit/479faa4a9afa3d126019547809a8e140b545b65c
#####[Bug]False type compare syntax
http://docs.scala-lang.org/overviews/reflection/symbols-trees-types.html, ( == incorrectly reports that )
Regex : ==\s*typeOf\[[^\]]+\]

####Type misuse
#####[Bug][Case] int divided by int(density, which is used above, should be double instead of int)
https://github.com/twitter/algebird/commit/0642b720f71f15fe9180598b920b32d4ccc55e9d
#####[Bug] should use while to iterate through a HashMap(var table: Array[ReactMap.Entry[K, V]] = null)
https://github.com/storm-enroute/reactive-collections/commit/75797ed43c501bd0308a5c6ee7fa423f6c1f58ba
#####[False] false type(missing bracket)
https://github.com/factorie/factorie/commit/a1334905a4d5580ea82fbe8bca58ba5d5c2654a6
#####[Warning]use of not thread-safe type in val
https://github.com/maxcellent/lamma/commit/61c787957da76cf4dbfb5ce3f133b351dc8799cd
#####[Bug]False parameter type
https://github.com/xitrum-framework/glokka/commit/ef079563a97a24966c44e5e58dc8c82664921ff1	

####Unused function parameter
[Bug][Case] the var "req" in "handlerForRequest" is not used, instead, mispelled into "request" in function definition
https://github.com/jroper/playframework/commit/7d22bf13830c7b072d22aaaee10fe7c5c4c8cc0c
[Bug][Case] parameter "regex" should be used
https://github.com/playframework/playframework/commit/8589377861f242be38bb5a85c2c472cade95f332
[Bug]unused function parameter
https://github.com/etorreborre/specs2/commit/a455c55b6d0c014e36f18ec39260ec79a65afa4d

####Override hashCode and equals
Regex : ^(?!override)\s*def hashCode\(\)
[Style] override members of the super class
https://github.com/BIDData/BIDMach/commit/d35f06bc3ae4da8ab604635453ba512ef6d1477b



